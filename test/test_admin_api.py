"""
    Ory Kratos API

    Documentation for all public and administrative Ory Kratos APIs. Public and administrative APIs are exposed on different ports. Public APIs can face the public internet without any protection while administrative APIs should never be exposed without prior authorization. To protect the administative API port you should use something like Nginx, Ory Oathkeeper, or any other technology capable of authorizing incoming requests.   # noqa: E501

    The version of the OpenAPI document: v0.0.0-alpha.38
    Contact: hi@ory.sh
    Generated by: https://openapi-generator.tech
"""


import unittest

import ory_kratos_client
from ory_kratos_client.api.admin_api import AdminApi  # noqa: E501


class TestAdminApi(unittest.TestCase):
    """AdminApi unit test stubs"""

    def setUp(self):
        self.api = AdminApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_identity(self):
        """Test case for create_identity

        Create an Identity  # noqa: E501
        """
        pass

    def test_create_recovery_link(self):
        """Test case for create_recovery_link

        Create a Recovery Link  # noqa: E501
        """
        pass

    def test_delete_identity(self):
        """Test case for delete_identity

        Delete an Identity  # noqa: E501
        """
        pass

    def test_get_identity(self):
        """Test case for get_identity

        Get an Identity  # noqa: E501
        """
        pass

    def test_get_schema(self):
        """Test case for get_schema

        """
        pass

    def test_get_self_service_error(self):
        """Test case for get_self_service_error

        Get User-Facing Self-Service Errors  # noqa: E501
        """
        pass

    def test_get_self_service_login_flow(self):
        """Test case for get_self_service_login_flow

        Get Login Flow  # noqa: E501
        """
        pass

    def test_get_self_service_recovery_flow(self):
        """Test case for get_self_service_recovery_flow

        Get information about a recovery flow  # noqa: E501
        """
        pass

    def test_get_self_service_registration_flow(self):
        """Test case for get_self_service_registration_flow

        Get Registration Flow  # noqa: E501
        """
        pass

    def test_get_self_service_settings_flow(self):
        """Test case for get_self_service_settings_flow

        Get Settings Flow  # noqa: E501
        """
        pass

    def test_get_self_service_verification_flow(self):
        """Test case for get_self_service_verification_flow

        Get Verification Flow  # noqa: E501
        """
        pass

    def test_get_version(self):
        """Test case for get_version

        Return Running Software Version.  # noqa: E501
        """
        pass

    def test_is_alive(self):
        """Test case for is_alive

        Check HTTP Server Status  # noqa: E501
        """
        pass

    def test_is_ready(self):
        """Test case for is_ready

        Check HTTP Server and Database Status  # noqa: E501
        """
        pass

    def test_list_identities(self):
        """Test case for list_identities

        List Identities  # noqa: E501
        """
        pass

    def test_prometheus(self):
        """Test case for prometheus

        Get snapshot metrics from the Hydra service. If you're using k8s, you can then add annotations to your deployment like so:  # noqa: E501
        """
        pass

    def test_update_identity(self):
        """Test case for update_identity

        Update an Identity  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
