"""
    Ory Kratos API

    Documentation for all public and administrative Ory Kratos APIs. Public and administrative APIs are exposed on different ports. Public APIs can face the public internet without any protection while administrative APIs should never be exposed without prior authorization. To protect the administative API port you should use something like Nginx, Ory Oathkeeper, or any other technology capable of authorizing incoming requests.   # noqa: E501

    The version of the OpenAPI document: v0.0.0-alpha.38
    Contact: hi@ory.sh
    Generated by: https://openapi-generator.tech
"""


import unittest

import ory_kratos_client
from ory_kratos_client.api.public_api import PublicApi  # noqa: E501


class TestPublicApi(unittest.TestCase):
    """PublicApi unit test stubs"""

    def setUp(self):
        self.api = PublicApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_get_schema(self):
        """Test case for get_schema

        """
        pass

    def test_get_self_service_error(self):
        """Test case for get_self_service_error

        Get User-Facing Self-Service Errors  # noqa: E501
        """
        pass

    def test_get_self_service_login_flow(self):
        """Test case for get_self_service_login_flow

        Get Login Flow  # noqa: E501
        """
        pass

    def test_get_self_service_recovery_flow(self):
        """Test case for get_self_service_recovery_flow

        Get information about a recovery flow  # noqa: E501
        """
        pass

    def test_get_self_service_registration_flow(self):
        """Test case for get_self_service_registration_flow

        Get Registration Flow  # noqa: E501
        """
        pass

    def test_get_self_service_settings_flow(self):
        """Test case for get_self_service_settings_flow

        Get Settings Flow  # noqa: E501
        """
        pass

    def test_get_self_service_verification_flow(self):
        """Test case for get_self_service_verification_flow

        Get Verification Flow  # noqa: E501
        """
        pass

    def test_initialize_self_service_browser_logout_flow(self):
        """Test case for initialize_self_service_browser_logout_flow

        Initialize Browser-Based Logout User Flow  # noqa: E501
        """
        pass

    def test_initialize_self_service_login_via_api_flow(self):
        """Test case for initialize_self_service_login_via_api_flow

        Initialize Login Flow for API clients  # noqa: E501
        """
        pass

    def test_initialize_self_service_login_via_browser_flow(self):
        """Test case for initialize_self_service_login_via_browser_flow

        Initialize Login Flow for browsers  # noqa: E501
        """
        pass

    def test_initialize_self_service_recovery_via_api_flow(self):
        """Test case for initialize_self_service_recovery_via_api_flow

        Initialize Recovery Flow for API Clients  # noqa: E501
        """
        pass

    def test_initialize_self_service_recovery_via_browser_flow(self):
        """Test case for initialize_self_service_recovery_via_browser_flow

        Initialize Recovery Flow for Browser Clients  # noqa: E501
        """
        pass

    def test_initialize_self_service_registration_via_api_flow(self):
        """Test case for initialize_self_service_registration_via_api_flow

        Initialize Registration Flow for API clients  # noqa: E501
        """
        pass

    def test_initialize_self_service_registration_via_browser_flow(self):
        """Test case for initialize_self_service_registration_via_browser_flow

        Initialize Registration Flow for browsers  # noqa: E501
        """
        pass

    def test_initialize_self_service_settings_via_api_flow(self):
        """Test case for initialize_self_service_settings_via_api_flow

        Initialize Settings Flow for API Clients  # noqa: E501
        """
        pass

    def test_initialize_self_service_settings_via_browser_flow(self):
        """Test case for initialize_self_service_settings_via_browser_flow

        Initialize Settings Flow for Browsers  # noqa: E501
        """
        pass

    def test_initialize_self_service_verification_via_api_flow(self):
        """Test case for initialize_self_service_verification_via_api_flow

        Initialize Verification Flow for API Clients  # noqa: E501
        """
        pass

    def test_initialize_self_service_verification_via_browser_flow(self):
        """Test case for initialize_self_service_verification_via_browser_flow

        Initialize Verification Flow for Browser Clients  # noqa: E501
        """
        pass

    def test_revoke_session(self):
        """Test case for revoke_session

        Initialize Logout Flow for API Clients - Revoke a Session  # noqa: E501
        """
        pass

    def test_submit_self_service_login_flow(self):
        """Test case for submit_self_service_login_flow

        Submit a Login Flow  # noqa: E501
        """
        pass

    def test_submit_self_service_recovery_flow(self):
        """Test case for submit_self_service_recovery_flow

        Complete Recovery Flow  # noqa: E501
        """
        pass

    def test_submit_self_service_recovery_flow_with_link_method(self):
        """Test case for submit_self_service_recovery_flow_with_link_method

        Complete Recovery Flow with Link Method  # noqa: E501
        """
        pass

    def test_submit_self_service_registration_flow(self):
        """Test case for submit_self_service_registration_flow

        Submit a Registration Flow  # noqa: E501
        """
        pass

    def test_submit_self_service_settings_flow(self):
        """Test case for submit_self_service_settings_flow

        Complete Settings Flow  # noqa: E501
        """
        pass

    def test_submit_self_service_verification_flow(self):
        """Test case for submit_self_service_verification_flow

        Complete Verification Flow  # noqa: E501
        """
        pass

    def test_whoami(self):
        """Test case for whoami

        Check Who the Current HTTP Session Belongs To  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
